<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ImputedUser', 'doctrine');

/**
 * BaseImputedUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $imputation_id
 * @property integer $user_id
 * @property Imputation $Imputation
 * @property User $User
 * 
 * @method integer     getImputationId()  Returns the current record's "imputation_id" value
 * @method integer     getUserId()        Returns the current record's "user_id" value
 * @method Imputation  getImputation()    Returns the current record's "Imputation" value
 * @method User        getUser()          Returns the current record's "User" value
 * @method ImputedUser setImputationId()  Sets the current record's "imputation_id" value
 * @method ImputedUser setUserId()        Sets the current record's "user_id" value
 * @method ImputedUser setImputation()    Sets the current record's "Imputation" value
 * @method ImputedUser setUser()          Sets the current record's "User" value
 * 
 * @package    epi
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseImputedUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('imputed_user');
        $this->hasColumn('imputation_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Imputation', array(
             'local' => 'imputation_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}