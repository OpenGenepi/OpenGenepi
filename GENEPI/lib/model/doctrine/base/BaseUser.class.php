<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('User', 'doctrine');

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $surname
 * @property date $birthdate
 * @property timestamp $created_at
 * @property string $organization_name
 * @property string $email
 * @property string $cellphone_number
 * @property string $comment
 * @property integer $user_gender_id
 * @property integer $user_seg_id
 * @property integer $address_id
 * @property integer $user_awareness_id
 * @property integer $login_id
 * @property integer $act_public_category_id
 * @property UserAwareness $UserAwareness
 * @property Login $Login
 * @property ActPublicCategory $ActPublicCategory
 * @property Address $Address
 * @property UserSeg $UserSeg
 * @property UserGender $UserGender
 * @property Doctrine_Collection $AccountUser
 * @property Doctrine_Collection $Imputation
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method string              getName()                   Returns the current record's "name" value
 * @method string              getSurname()                Returns the current record's "surname" value
 * @method date                getBirthdate()              Returns the current record's "birthdate" value
 * @method timestamp           getCreatedAt()              Returns the current record's "created_at" value
 * @method string              getOrganizationName()       Returns the current record's "organization_name" value
 * @method string              getEmail()                  Returns the current record's "email" value
 * @method string              getCellphoneNumber()        Returns the current record's "cellphone_number" value
 * @method string              getComment()                Returns the current record's "comment" value
 * @method integer             getUserGenderId()           Returns the current record's "user_gender_id" value
 * @method integer             getUserSegId()              Returns the current record's "user_seg_id" value
 * @method integer             getAddressId()              Returns the current record's "address_id" value
 * @method integer             getUserAwarenessId()        Returns the current record's "user_awareness_id" value
 * @method integer             getLoginId()                Returns the current record's "login_id" value
 * @method integer             getActPublicCategoryId()    Returns the current record's "act_public_category_id" value
 * @method UserAwareness       getUserAwareness()          Returns the current record's "UserAwareness" value
 * @method Login               getLogin()                  Returns the current record's "Login" value
 * @method ActPublicCategory   getActPublicCategory()      Returns the current record's "ActPublicCategory" value
 * @method Address             getAddress()                Returns the current record's "Address" value
 * @method UserSeg             getUserSeg()                Returns the current record's "UserSeg" value
 * @method UserGender          getUserGender()             Returns the current record's "UserGender" value
 * @method Doctrine_Collection getAccountUser()            Returns the current record's "AccountUser" collection
 * @method Doctrine_Collection getImputation()             Returns the current record's "Imputation" collection
 * @method User                setId()                     Sets the current record's "id" value
 * @method User                setName()                   Sets the current record's "name" value
 * @method User                setSurname()                Sets the current record's "surname" value
 * @method User                setBirthdate()              Sets the current record's "birthdate" value
 * @method User                setCreatedAt()              Sets the current record's "created_at" value
 * @method User                setOrganizationName()       Sets the current record's "organization_name" value
 * @method User                setEmail()                  Sets the current record's "email" value
 * @method User                setCellphoneNumber()        Sets the current record's "cellphone_number" value
 * @method User                setComment()                Sets the current record's "comment" value
 * @method User                setUserGenderId()           Sets the current record's "user_gender_id" value
 * @method User                setUserSegId()              Sets the current record's "user_seg_id" value
 * @method User                setAddressId()              Sets the current record's "address_id" value
 * @method User                setUserAwarenessId()        Sets the current record's "user_awareness_id" value
 * @method User                setLoginId()                Sets the current record's "login_id" value
 * @method User                setActPublicCategoryId()    Sets the current record's "act_public_category_id" value
 * @method User                setUserAwareness()          Sets the current record's "UserAwareness" value
 * @method User                setLogin()                  Sets the current record's "Login" value
 * @method User                setActPublicCategory()      Sets the current record's "ActPublicCategory" value
 * @method User                setAddress()                Sets the current record's "Address" value
 * @method User                setUserSeg()                Sets the current record's "UserSeg" value
 * @method User                setUserGender()             Sets the current record's "UserGender" value
 * @method User                setAccountUser()            Sets the current record's "AccountUser" collection
 * @method User                setImputation()             Sets the current record's "Imputation" collection
 * 
 * @package    GENEPI
 * @subpackage model
 * @author     Pierre Boitel, Bastien Libersa, Paul PÃ©riÃ©
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('surname', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('birthdate', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('organization_name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('email', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '80',
             ));
        $this->hasColumn('cellphone_number', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('comment', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '250',
             ));
        $this->hasColumn('user_gender_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('user_seg_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('address_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('user_awareness_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('login_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('act_public_category_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserAwareness', array(
             'local' => 'user_awareness_id',
             'foreign' => 'id'));

        $this->hasOne('Login', array(
             'local' => 'login_id',
             'foreign' => 'id'));

        $this->hasOne('ActPublicCategory', array(
             'local' => 'act_public_category_id',
             'foreign' => 'id'));

        $this->hasOne('Address', array(
             'local' => 'address_id',
             'foreign' => 'id'));

        $this->hasOne('UserSeg', array(
             'local' => 'user_seg_id',
             'foreign' => 'id'));

        $this->hasOne('UserGender', array(
             'local' => 'user_gender_id',
             'foreign' => 'id'));

        $this->hasMany('AccountUser', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Imputation', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}