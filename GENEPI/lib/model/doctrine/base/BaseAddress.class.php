<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Address', 'doctrine');

/**
 * BaseAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $street
 * @property string $telephone_number
 * @property integer $address_city_id
 * @property AddressCity $AddressCity
 * @property Doctrine_Collection $Building
 * @property Doctrine_Collection $Structure
 * @property Doctrine_Collection $User
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getStreet()           Returns the current record's "street" value
 * @method string              getTelephoneNumber()  Returns the current record's "telephone_number" value
 * @method integer             getAddressCityId()    Returns the current record's "address_city_id" value
 * @method AddressCity         getAddressCity()      Returns the current record's "AddressCity" value
 * @method Doctrine_Collection getBuilding()         Returns the current record's "Building" collection
 * @method Doctrine_Collection getStructure()        Returns the current record's "Structure" collection
 * @method Doctrine_Collection getUser()             Returns the current record's "User" collection
 * @method Address             setId()               Sets the current record's "id" value
 * @method Address             setStreet()           Sets the current record's "street" value
 * @method Address             setTelephoneNumber()  Sets the current record's "telephone_number" value
 * @method Address             setAddressCityId()    Sets the current record's "address_city_id" value
 * @method Address             setAddressCity()      Sets the current record's "AddressCity" value
 * @method Address             setBuilding()         Sets the current record's "Building" collection
 * @method Address             setStructure()        Sets the current record's "Structure" collection
 * @method Address             setUser()             Sets the current record's "User" collection
 * 
 * @package    GENEPI
 * @subpackage model
 * @author     Pierre Boitel, Bastien Libersa, Paul PÃ©riÃ©
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAddress extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('address');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('street', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '80',
             ));
        $this->hasColumn('telephone_number', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '20',
             ));
        $this->hasColumn('address_city_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AddressCity', array(
             'local' => 'address_city_id',
             'foreign' => 'id'));

        $this->hasMany('Building', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $this->hasMany('Structure', array(
             'local' => 'id',
             'foreign' => 'address_id'));

        $this->hasMany('User', array(
             'local' => 'id',
             'foreign' => 'address_id'));
    }
}