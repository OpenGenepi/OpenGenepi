<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserArchive', 'doctrine');

/**
 * BaseUserArchive
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $age
 * @property timestamp $created_at
 * @property string $city_name
 * @property string $country
 * @property string $gender
 * @property string $seg
 * @property string $awareness
 * @property string $category
 * @property integer $user_id
 * @property timestamp $deleted_at
 * @property Doctrine_Collection $ImputationArchive
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getAge()               Returns the current record's "age" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method string              getCityName()          Returns the current record's "city_name" value
 * @method string              getCountry()           Returns the current record's "country" value
 * @method string              getGender()            Returns the current record's "gender" value
 * @method string              getSeg()               Returns the current record's "seg" value
 * @method string              getAwareness()         Returns the current record's "awareness" value
 * @method string              getCategory()          Returns the current record's "category" value
 * @method integer             getUserId()            Returns the current record's "user_id" value
 * @method timestamp           getDeletedAt()         Returns the current record's "deleted_at" value
 * @method Doctrine_Collection getImputationArchive() Returns the current record's "ImputationArchive" collection
 * @method UserArchive         setId()                Sets the current record's "id" value
 * @method UserArchive         setAge()               Sets the current record's "age" value
 * @method UserArchive         setCreatedAt()         Sets the current record's "created_at" value
 * @method UserArchive         setCityName()          Sets the current record's "city_name" value
 * @method UserArchive         setCountry()           Sets the current record's "country" value
 * @method UserArchive         setGender()            Sets the current record's "gender" value
 * @method UserArchive         setSeg()               Sets the current record's "seg" value
 * @method UserArchive         setAwareness()         Sets the current record's "awareness" value
 * @method UserArchive         setCategory()          Sets the current record's "category" value
 * @method UserArchive         setUserId()            Sets the current record's "user_id" value
 * @method UserArchive         setDeletedAt()         Sets the current record's "deleted_at" value
 * @method UserArchive         setImputationArchive() Sets the current record's "ImputationArchive" collection
 * 
 * @package    GENEPI
 * @subpackage model
 * @author     Pierre Boitel, Bastien Libersa, Paul Périé
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseUserArchive extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_archive');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('age', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('city_name', 'string', 90, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '90',
             ));
        $this->hasColumn('country', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('gender', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('seg', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('awareness', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('category', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('deleted_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ImputationArchive', array(
             'local' => 'id',
             'foreign' => 'user_archive_id'));
    }
}