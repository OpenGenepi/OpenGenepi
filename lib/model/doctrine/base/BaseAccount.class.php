<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Account', 'doctrine');

/**
 * BaseAccount
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property float $value
 * @property integer $monetary_account
 * @property timestamp $created_at
 * @property integer $act_id
 * @property Act $Act
 * @property Doctrine_Collection $AccountUser
 * @property Doctrine_Collection $Imputation
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method float               getValue()            Returns the current record's "value" value
 * @method integer             getMonetaryAccount()  Returns the current record's "monetary_account" value
 * @method timestamp           getCreatedAt()        Returns the current record's "created_at" value
 * @method integer             getActId()            Returns the current record's "act_id" value
 * @method Act                 getAct()              Returns the current record's "Act" value
 * @method Doctrine_Collection getAccountUser()      Returns the current record's "AccountUser" collection
 * @method Doctrine_Collection getImputation()       Returns the current record's "Imputation" collection
 * @method Account             setId()               Sets the current record's "id" value
 * @method Account             setValue()            Sets the current record's "value" value
 * @method Account             setMonetaryAccount()  Sets the current record's "monetary_account" value
 * @method Account             setCreatedAt()        Sets the current record's "created_at" value
 * @method Account             setActId()            Sets the current record's "act_id" value
 * @method Account             setAct()              Sets the current record's "Act" value
 * @method Account             setAccountUser()      Sets the current record's "AccountUser" collection
 * @method Account             setImputation()       Sets the current record's "Imputation" collection
 * 
 * @package    GENEPI
 * @subpackage model
 * @author     Pierre Boitel, Bastien Libersa, Paul Périé
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAccount extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('account');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('value', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('monetary_account', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('act_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Act', array(
             'local' => 'act_id',
             'foreign' => 'id'));

        $this->hasMany('AccountUser', array(
             'local' => 'id',
             'foreign' => 'account_id'));

        $this->hasMany('Imputation', array(
             'local' => 'id',
             'foreign' => 'account_id'));
    }
}