<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Moderator', 'doctrine');

/**
 * BaseModerator
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $surname
 * @property string $email
 * @property integer $login_id
 * @property Login $Login
 * @property Doctrine_Collection $Imputation
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method string              getName()       Returns the current record's "name" value
 * @method string              getSurname()    Returns the current record's "surname" value
 * @method string              getEmail()      Returns the current record's "email" value
 * @method integer             getLoginId()    Returns the current record's "login_id" value
 * @method Login               getLogin()      Returns the current record's "Login" value
 * @method Doctrine_Collection getImputation() Returns the current record's "Imputation" collection
 * @method Moderator           setId()         Sets the current record's "id" value
 * @method Moderator           setName()       Sets the current record's "name" value
 * @method Moderator           setSurname()    Sets the current record's "surname" value
 * @method Moderator           setEmail()      Sets the current record's "email" value
 * @method Moderator           setLoginId()    Sets the current record's "login_id" value
 * @method Moderator           setLogin()      Sets the current record's "Login" value
 * @method Moderator           setImputation() Sets the current record's "Imputation" collection
 * 
 * @package    GENEPI
 * @subpackage model
 * @author     Pierre Boitel, Bastien Libersa, Paul Périé
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseModerator extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('moderator');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('surname', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('email', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '80',
             ));
        $this->hasColumn('login_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Login', array(
             'local' => 'login_id',
             'foreign' => 'id'));

        $this->hasMany('Imputation', array(
             'local' => 'id',
             'foreign' => 'moderator_id'));
    }
}