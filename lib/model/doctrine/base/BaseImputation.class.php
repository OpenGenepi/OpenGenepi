<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Imputation', 'doctrine');

/**
 * BaseImputation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $date
 * @property float $total
 * @property integer $imputation_type
 * @property string $comment
 * @property integer $user_id
 * @property integer $moderator_id
 * @property integer $account_id
 * @property integer $act_id
 * @property integer $room_id
 * @property integer $building_id
 * @property integer $method_of_payment_id
 * @property integer $unity_id
 * @property Account $Account
 * @property Act $Act
 * @property Building $Building
 * @property ImputationMethodOfPayment $ImputationMethodOfPayment
 * @property Moderator $Moderator
 * @property Room $Room
 * @property Unity $Unity
 * @property User $User
 * @property Doctrine_Collection $ImputationAccountTransaction
 * @property Doctrine_Collection $ImputationCountableService
 * @property Doctrine_Collection $ImputationPurchase
 * @property Doctrine_Collection $ImputationSubscription
 * @property Doctrine_Collection $ImputationUnitaryService
 * 
 * @method integer                   getId()                           Returns the current record's "id" value
 * @method timestamp                 getDate()                         Returns the current record's "date" value
 * @method float                     getTotal()                        Returns the current record's "total" value
 * @method integer                   getImputationType()               Returns the current record's "imputation_type" value
 * @method string                    getComment()                      Returns the current record's "comment" value
 * @method integer                   getUserId()                       Returns the current record's "user_id" value
 * @method integer                   getModeratorId()                  Returns the current record's "moderator_id" value
 * @method integer                   getAccountId()                    Returns the current record's "account_id" value
 * @method integer                   getActId()                        Returns the current record's "act_id" value
 * @method integer                   getRoomId()                       Returns the current record's "room_id" value
 * @method integer                   getBuildingId()                   Returns the current record's "building_id" value
 * @method integer                   getMethodOfPaymentId()            Returns the current record's "method_of_payment_id" value
 * @method integer                   getUnityId()                      Returns the current record's "unity_id" value
 * @method Account                   getAccount()                      Returns the current record's "Account" value
 * @method Act                       getAct()                          Returns the current record's "Act" value
 * @method Building                  getBuilding()                     Returns the current record's "Building" value
 * @method ImputationMethodOfPayment getImputationMethodOfPayment()    Returns the current record's "ImputationMethodOfPayment" value
 * @method Moderator                 getModerator()                    Returns the current record's "Moderator" value
 * @method Room                      getRoom()                         Returns the current record's "Room" value
 * @method Unity                     getUnity()                        Returns the current record's "Unity" value
 * @method User                      getUser()                         Returns the current record's "User" value
 * @method Doctrine_Collection       getImputationAccountTransaction() Returns the current record's "ImputationAccountTransaction" collection
 * @method Doctrine_Collection       getImputationCountableService()   Returns the current record's "ImputationCountableService" collection
 * @method Doctrine_Collection       getImputationPurchase()           Returns the current record's "ImputationPurchase" collection
 * @method Doctrine_Collection       getImputationSubscription()       Returns the current record's "ImputationSubscription" collection
 * @method Doctrine_Collection       getImputationUnitaryService()     Returns the current record's "ImputationUnitaryService" collection
 * @method Imputation                setId()                           Sets the current record's "id" value
 * @method Imputation                setDate()                         Sets the current record's "date" value
 * @method Imputation                setTotal()                        Sets the current record's "total" value
 * @method Imputation                setImputationType()               Sets the current record's "imputation_type" value
 * @method Imputation                setComment()                      Sets the current record's "comment" value
 * @method Imputation                setUserId()                       Sets the current record's "user_id" value
 * @method Imputation                setModeratorId()                  Sets the current record's "moderator_id" value
 * @method Imputation                setAccountId()                    Sets the current record's "account_id" value
 * @method Imputation                setActId()                        Sets the current record's "act_id" value
 * @method Imputation                setRoomId()                       Sets the current record's "room_id" value
 * @method Imputation                setBuildingId()                   Sets the current record's "building_id" value
 * @method Imputation                setMethodOfPaymentId()            Sets the current record's "method_of_payment_id" value
 * @method Imputation                setUnityId()                      Sets the current record's "unity_id" value
 * @method Imputation                setAccount()                      Sets the current record's "Account" value
 * @method Imputation                setAct()                          Sets the current record's "Act" value
 * @method Imputation                setBuilding()                     Sets the current record's "Building" value
 * @method Imputation                setImputationMethodOfPayment()    Sets the current record's "ImputationMethodOfPayment" value
 * @method Imputation                setModerator()                    Sets the current record's "Moderator" value
 * @method Imputation                setRoom()                         Sets the current record's "Room" value
 * @method Imputation                setUnity()                        Sets the current record's "Unity" value
 * @method Imputation                setUser()                         Sets the current record's "User" value
 * @method Imputation                setImputationAccountTransaction() Sets the current record's "ImputationAccountTransaction" collection
 * @method Imputation                setImputationCountableService()   Sets the current record's "ImputationCountableService" collection
 * @method Imputation                setImputationPurchase()           Sets the current record's "ImputationPurchase" collection
 * @method Imputation                setImputationSubscription()       Sets the current record's "ImputationSubscription" collection
 * @method Imputation                setImputationUnitaryService()     Sets the current record's "ImputationUnitaryService" collection
 * 
 * @package    GENEPI
 * @subpackage model
 * @author     Pierre Boitel, Bastien Libersa, Paul PÃ©riÃ©
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseImputation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('imputation');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('total', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('imputation_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('comment', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '250',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('moderator_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('account_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('act_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('room_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('building_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('method_of_payment_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('unity_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'account_id',
             'foreign' => 'id'));

        $this->hasOne('Act', array(
             'local' => 'act_id',
             'foreign' => 'id'));

        $this->hasOne('Building', array(
             'local' => 'building_id',
             'foreign' => 'id'));

        $this->hasOne('ImputationMethodOfPayment', array(
             'local' => 'method_of_payment_id',
             'foreign' => 'id'));

        $this->hasOne('Moderator', array(
             'local' => 'moderator_id',
             'foreign' => 'id'));

        $this->hasOne('Room', array(
             'local' => 'room_id',
             'foreign' => 'id'));

        $this->hasOne('Unity', array(
             'local' => 'unity_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('ImputationAccountTransaction', array(
             'local' => 'id',
             'foreign' => 'imputation_id'));

        $this->hasMany('ImputationCountableService', array(
             'local' => 'id',
             'foreign' => 'imputation_id'));

        $this->hasMany('ImputationPurchase', array(
             'local' => 'id',
             'foreign' => 'imputation_id'));

        $this->hasMany('ImputationSubscription', array(
             'local' => 'id',
             'foreign' => 'imputation_id'));

        $this->hasMany('ImputationUnitaryService', array(
             'local' => 'id',
             'foreign' => 'imputation_id'));
    }
}