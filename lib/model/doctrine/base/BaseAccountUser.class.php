<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AccountUser', 'doctrine');

/**
 * BaseAccountUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $account_id
 * @property integer $user_id
 * @property Account $Account
 * @property User $User
 * 
 * @method integer     getId()         Returns the current record's "id" value
 * @method integer     getAccountId()  Returns the current record's "account_id" value
 * @method integer     getUserId()     Returns the current record's "user_id" value
 * @method Account     getAccount()    Returns the current record's "Account" value
 * @method User        getUser()       Returns the current record's "User" value
 * @method AccountUser setId()         Sets the current record's "id" value
 * @method AccountUser setAccountId()  Sets the current record's "account_id" value
 * @method AccountUser setUserId()     Sets the current record's "user_id" value
 * @method AccountUser setAccount()    Sets the current record's "Account" value
 * @method AccountUser setUser()       Sets the current record's "User" value
 * 
 * @package    GENEPI
 * @subpackage model
 * @author     Pierre Boitel, Bastien Libersa, Paul PÃ©riÃ©
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAccountUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('account_user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('account_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'account_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}