<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Reservation', 'doctrine');

/**
 * BaseReservation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $designation
 * @property string $description
 * @property enum $type
 * @property integer $type_id
 * @property integer $public
 * @property string $public_designation
 * @property string $public_description
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $ReservationComputer
 * @property Doctrine_Collection $ReservationRoom
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getDesignation()         Returns the current record's "designation" value
 * @method string              getDescription()         Returns the current record's "description" value
 * @method enum                getType()                Returns the current record's "type" value
 * @method integer             getTypeId()              Returns the current record's "type_id" value
 * @method integer             getPublic()              Returns the current record's "public" value
 * @method string              getPublicDesignation()   Returns the current record's "public_designation" value
 * @method string              getPublicDescription()   Returns the current record's "public_description" value
 * @method Doctrine_Collection getEvent()               Returns the current record's "Event" collection
 * @method Doctrine_Collection getReservationComputer() Returns the current record's "ReservationComputer" collection
 * @method Doctrine_Collection getReservationRoom()     Returns the current record's "ReservationRoom" collection
 * @method Reservation         setId()                  Sets the current record's "id" value
 * @method Reservation         setDesignation()         Sets the current record's "designation" value
 * @method Reservation         setDescription()         Sets the current record's "description" value
 * @method Reservation         setType()                Sets the current record's "type" value
 * @method Reservation         setTypeId()              Sets the current record's "type_id" value
 * @method Reservation         setPublic()              Sets the current record's "public" value
 * @method Reservation         setPublicDesignation()   Sets the current record's "public_designation" value
 * @method Reservation         setPublicDescription()   Sets the current record's "public_description" value
 * @method Reservation         setEvent()               Sets the current record's "Event" collection
 * @method Reservation         setReservationComputer() Sets the current record's "ReservationComputer" collection
 * @method Reservation         setReservationRoom()     Sets the current record's "ReservationRoom" collection
 * 
 * @package    GENEPI
 * @subpackage model
 * @author     Pierre Boitel, Bastien Libersa, Paul Périé
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseReservation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reservation');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('designation', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('type', 'enum', 5, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'user',
              1 => 'group',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '5',
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('public', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('public_designation', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('public_description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'reservation_id'));

        $this->hasMany('ReservationComputer', array(
             'local' => 'id',
             'foreign' => 'reservation_id'));

        $this->hasMany('ReservationRoom', array(
             'local' => 'id',
             'foreign' => 'reservation_id'));
    }
}